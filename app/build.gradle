/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.4.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '3.0.3.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream-binder-kafka', version: '3.0.3.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream-binder-kafka-streams', version: '3.0.3.RELEASE'
    implementation  'org.apache.kafka:kafka-streams'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testCompileOnly 'junit:junit:4.13'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

    test {
	useJUnit()
	
        testImplementation 'org.springframework.kafka:spring-kafka-test'
    }
}

application {
    // Define the main class for the application.
    mainClass = 'KafkaSpringExample.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
